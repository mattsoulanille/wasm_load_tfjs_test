load ("@npm//node-static:index.bzl", "static");
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@npm//@bazel/concatjs:index.bzl", "ts_library")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")


ts_library(
    name = "index_lib",
    srcs = [
        "index.ts",
    ],
    deps = [
        "//cc:main_lib",
        "@npm//@tensorflow/tfjs",
        "@npm//@tensorflow/tfjs-core",
        "@npm//comlink",
    ]
)

rollup_bundle(
    name = "index_bundle",
    entry_point = "index.ts",
    deps = [
        ":index_lib",
        "//cc:main_lib",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-commonjs",
        "@npm//rollup-plugin-sourcemaps",
    ],
    config_file = "//:rollup.config.js",
)

pkg_web(
    name = "server_files",
    srcs = [
        "index.html",
        ":index_bundle",
        "//cc:main_wasm",
        "//cc:cc_srcs",
    ],
    additional_root_paths = [
        "cc/main_wasm",
    ],
)

static(
    name = "server",
    data = [":server_files"],
    templated_args = [
        "-a 0.0.0.0",
        "-H '{\"Cross-Origin-Opener-Policy\": \"same-origin\", \"Cross-Origin-Embedder-Policy\": \"require-corp\", \"Cache-Control\": \"no-cache, must-revalidate\"}'", # CORS headers for SharedArrayBuffer. Cache headers.
        "web/server_files",
    ],
)
